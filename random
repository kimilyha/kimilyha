import asyncio
import random
from telethon.tl.types import Message

from .. import loader

@loader.tds
class RandomMod(loader.Module):
    """Модуль для генерации случайных чисел.
    Используйте команду .random n1 n2 для генерации случайного числа между n1 и n2."""

    async def random_command(self, command):
        try:
            parts = command.split()
            if len(parts) != 3 or parts[0] != '.random':
                return "Неправильный формат команды. Используйте: .random n1 n2"
            
            n1 = int(parts[1])
            n2 = int(parts[2])
            
            if n1 >= n2:
                return "Первое число должно быть меньше второго."
            
            random_number = random.randint(n1, n2)
            
            return f"Случайное число между {n1} и {n2}: {random_number}"
        
        except ValueError:
            return "Пожалуйста, укажите два целых числа после команды .random."

    async def random_handler(self, message: Message):
        command = message.text.strip()
        result = await self.random_command(command)
        await message.respond(result)

    async def client_ready(self, client, db):
        self.client = client
        self.me = await client.get_me()

    async def watcher(self, event):
        if not isinstance(event, Message):
            return
        message = event.message
        if message.sender_id == self.me.id:
            return
        if message.text.startswith('.random'):
            await self.random_handler(message)
